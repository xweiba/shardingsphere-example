#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# 5.4 版本后移除了默认数据源配置，如果没设置单标，将会自动识别。
# 原理应该是只有主库才会有所有的表，而子库应该只有需要分库的那些表

# 设置该库的名称
databaseName: demo

props:
  sql-show: true
mode:
  type: Standalone
  repository:
    type: JDBC
    props:
      path: demo
dataSources:
  ds_master_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
  ds_master_0_slave_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
  ds_master_0_slave_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_0_slave_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
  ds_master_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
  ds_master_1_slave_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
  ds_master_1_slave_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_master_1_slave_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: test123
    maxPoolSize: 10
rules:
- !SINGLE
  tables:
    - ds_master_1.* # 加载指定数据源中的全部单表
  defaultDataSource: ds_master_1 # 默认数据源，缺失值为空，表示随机单播路由。
- !SHARDING
  tables:
    t_order:
      databaseStrategy:
        standard:
          # 分片字段，注意当没有分片键时会查询或删除所有的数据源，如果需要默认指定，可以使用hint模式，通过业务层进行分片确认。
          shardingColumn: user_id
          # 分片策略名称，具体分片策略定义在 spring.shardingsphere.rules
          # .sharding.sharding-algorithms 路径下
          shardingAlgorithmName: database_user_id_inline
    t_order_item:
      databaseStrategy:
        standard:
          # 分片字段
          shardingColumn: user_id
          # 分片策略名称，具体分片策略定义在 spring.shardingsphere.rules
          # .sharding.sharding-algorithms 路径下
          shardingAlgorithmName: database_user_id_inline
    t_address:
      databaseStrategy:
        hint:
          shardingAlgorithmName: database_hint_user_id_inline
#  defaultTableStrategy:
#    none:
#  defaultShardingColumn: user_id
#  defaultDatabaseStrategy:
#    hint:
#      shardingAlgorithmName: database_hint_user_id_inline
  shardingAlgorithms:
    database_user_id_inline:
      type: CLASS_BASED
      props:
        strategy: standard
        algorithmClassName: example.shardingsphere.algorithms.ShardingDataBaseAlgorithmUserId
    database_hint_user_id_inline:
      type: CLASS_BASED
      props:
        strategy: hint
        algorithmClassName: example.shardingsphere.algorithms.ShardingDataBaseHintAlgorithmUserId
  keyGenerators:
    snowflake_generator:
      type: SNOWFLAKE
# 广播表, 字典表，将写入所有库
#- !BROADCAST
#  tables:
#    - t_address
- !READWRITE_SPLITTING
  dataSources:
    ds_master_0:
      writeDataSourceName: ds_master_0
      readDataSourceNames:
        - ds_master_0_slave_0
        - ds_master_0_slave_1
    ds_master_1:
      writeDataSourceName: ds_master_1
      readDataSourceNames:
        - ds_master_1_slave_0
        - ds_master_1_slave_1
  loadBalancers:
    round_robin:
      type: ROUND_ROBIN
